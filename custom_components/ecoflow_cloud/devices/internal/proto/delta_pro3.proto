syntax = "proto3";

// Delta Pro 3 main status message (cmd_id 50)
// This is working successfully and parsing 29+ fields
message DeltaPro3Status {
    // Basic device info
    optional uint32 unknown1 = 1;
    optional uint32 unknown2 = 2;  
    optional uint32 unknown3 = 3;
    optional uint32 unknown4 = 4;
    optional uint64 timestamp = 5;
    
    // Battery fields (common in EcoFlow devices)
    optional uint32 soc = 6;              // Battery state of charge
    optional uint32 voltage = 7;          // Battery voltage
    optional uint32 current = 8;          // Battery current 
    optional uint32 temp = 9;             // Battery temperature
    optional uint32 cycles = 10;          // Battery cycles
    
    // Power fields
    optional uint32 input_watts = 11;     // Total input power
    optional uint32 output_watts = 12;    // Total output power
    optional uint32 ac_in_watts = 13;     // AC input power
    optional uint32 ac_out_watts = 14;    // AC output power
    optional uint32 ac_in_vol = 15;       // AC input voltage
    optional uint32 ac_out_vol = 16;      // AC output voltage
    
    // Solar/MPPT fields
    optional uint32 solar_in_watts = 17;  // Solar input power
    optional uint32 solar_in_vol = 18;    // Solar input voltage
    optional uint32 solar_in_cur = 19;    // Solar input current
    
    // DC output fields
    optional uint32 dc_out_watts = 20;    // DC output power
    optional uint32 car_out_watts = 21;   // Car port output
    optional uint32 anderson_watts = 22;  // Anderson port output
    
    // USB outputs
    optional uint32 usb1_watts = 23;      // USB 1 output
    optional uint32 usb2_watts = 24;      // USB 2 output
    optional uint32 typec1_watts = 25;    // Type-C 1 output
    optional uint32 typec2_watts = 26;    // Type-C 2 output
    
    // Time estimates
    optional uint32 charge_time = 27;     // Charge time remaining
    optional uint32 discharge_time = 28;  // Discharge time remaining
    
    // Battery capacity info
    optional uint32 remain_cap = 29;      // Remaining capacity
    optional uint32 full_cap = 30;        // Full capacity
    optional uint32 design_cap = 31;      // Design capacity
    optional uint32 soh = 32;             // State of health
    
    // Cell info
    optional uint32 min_cell_vol = 33;    // Minimum cell voltage
    optional uint32 max_cell_vol = 34;    // Maximum cell voltage
    optional uint32 min_cell_temp = 35;   // Minimum cell temperature
    optional uint32 max_cell_temp = 36;   // Maximum cell temperature
    
    // Control states
    optional bool ac_enabled = 37;        // AC output enabled
    optional bool dc_enabled = 38;        // DC output enabled
    optional bool beeper_enabled = 39;    // Beeper enabled
    
    // Error/warning codes
    optional uint32 error_code = 40;      // Error code
    optional uint32 warning_code = 41;    // Warning code
    
    // Additional fields to capture more data as we discover them
    optional uint32 unknown42 = 42;
    optional uint32 unknown43 = 43;
    optional uint32 unknown44 = 44;
    optional uint32 unknown45 = 45;
    optional uint32 unknown46 = 46;
    optional uint32 unknown47 = 47;
    optional uint32 unknown48 = 48;
    optional uint32 unknown49 = 49;
    optional uint32 unknown50 = 50;
}

// Note: cmd_id 21 (heartbeat) appears to be encrypted/encoded data
// We'll analyze it separately when we understand the encoding scheme
