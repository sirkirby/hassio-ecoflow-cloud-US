syntax = "proto3";

// Delta Pro 3 main status message (cmd_id 50)
// Field mappings confirmed through comprehensive analysis
message DeltaPro3Status {
    // Basic device info
    optional uint32 unknown1 = 1;              // Always 0
    optional uint32 unknown2 = 2;              // Variable data
    optional uint32 unknown3 = 3;              // Always 0
    optional uint32 unknown4 = 4;              // Always 0
    optional uint64 timestamp = 5;             // System timestamp
    
    // Battery fields (confirmed EcoFlow standard mappings)
    optional uint32 soc = 6;                   // Battery state of charge %
    optional uint32 voltage = 7;               // Battery voltage (mV)
    optional uint32 current = 8;               // Battery current (mA, signed)
    optional uint32 temp = 9;                  // Battery temperature (°C)
    optional uint32 cycles = 10;               // Battery cycle count
    
    // Power fields (confirmed mappings)
    optional uint32 input_watts = 11;          // Total input power (mW)
    optional uint32 output_watts = 12;         // Total output power (mW)
    optional uint32 ac_in_watts = 13;          // AC input power (mW)
    optional uint32 ac_out_watts = 14;         // AC output power (mW)
    optional uint32 ac_in_vol = 15;            // AC input voltage (mV)
    optional uint32 ac_out_vol = 16;           // AC output voltage (mV)
    
    // Solar/MPPT fields - LV solar (basic fields for reference)
    // NOTE: These may represent LV solar, but we'll use raw fields for extraction
    optional uint32 solar_lv_watts_basic = 17;    // LV solar power (basic mapping)
    optional uint32 solar_lv_vol_raw = 18;        // LV solar voltage (raw, needs scaling)
    optional uint32 solar_lv_cur_raw = 19;        // LV solar current (raw, needs scaling)
    
    // DC output fields
    optional uint32 dc_out_watts = 20;         // DC output power (mW)
    optional uint32 car_out_watts = 21;        // Car port output (mW)
    optional uint32 anderson_watts = 22;       // Anderson port output (mW)
    
    // USB outputs
    optional uint32 usb1_watts = 23;           // USB 1 output (mW)
    optional uint32 usb2_watts = 24;           // USB 2 output (mW)
    optional uint32 typec1_watts = 25;         // Type-C 1 output (mW)
    optional uint32 typec2_watts = 26;         // Type-C 2 output (mW)
    
    // Time estimates
    optional uint32 charge_time = 27;          // Charge time remaining (minutes)
    optional uint32 discharge_time = 28;       // Discharge time remaining (minutes)
    
    // Battery capacity info
    optional uint32 remain_cap = 29;           // Remaining capacity (mAh)
    optional uint32 full_cap = 30;            // Full capacity (mAh)
    optional uint32 design_cap = 31;          // Design capacity (mAh)
    optional uint32 soh = 32;                 // State of health %
    
    // Cell info
    optional uint32 min_cell_vol = 33;        // Minimum cell voltage (mV)
    optional uint32 max_cell_vol = 34;        // Maximum cell voltage (mV)
    optional uint32 min_cell_temp = 35;       // Minimum cell temperature (°C)
    optional uint32 max_cell_temp = 36;       // Maximum cell temperature (°C)
    
    // Control states
    optional bool ac_enabled = 37;            // AC output enabled
    optional bool dc_enabled = 38;            // DC output enabled
    optional bool beeper_enabled = 39;        // Beeper enabled
    
    // Error/warning codes
    optional uint32 error_code = 40;          // Error code
    optional uint32 warning_code = 41;        // Warning code
    
    // Extended fields found in analysis
    optional uint32 unknown42 = 42;          // Always 0
    optional uint32 unknown43 = 43;          // Always 0
    optional uint32 unknown44 = 44;          // Always 0
    optional uint32 unknown45 = 45;          // Large value ~4294967295
    optional uint32 unknown46 = 46;          // Small value ~3
    optional uint32 unknown47 = 47;          // Small value ~1
    optional uint32 unknown48 = 48;          // Always 0
    optional uint32 unknown49 = 49;          // Always 0
    optional uint32 unknown50 = 50;          // Variable ~970423
    
    // Energy accumulation fields for Home Assistant energy dashboard
    optional uint32 solar_in_energy = 51;     // Solar input energy (Wh)
    optional uint32 charge_ac_energy = 52;    // AC charging energy (Wh)
    optional uint32 charge_dc_energy = 53;    // DC charging energy (Wh)
    optional uint32 discharge_ac_energy = 54; // AC discharge energy (Wh)
    optional uint32 discharge_dc_energy = 55; // DC discharge energy (Wh)
    
    // USB QC outputs
    optional uint32 qc_usb1_watts = 56;       // USB QC 1 output (mW)
    optional uint32 qc_usb2_watts = 57;       // USB QC 2 output (mW)
    
    // Additional confirmed fields
    optional uint32 unknown58 = 58;          // Always 0
    optional uint32 unknown59 = 59;          // Always 0
    optional uint32 unknown60 = 60;          // Always 0
    optional uint32 unknown61 = 61;          // Excluded: solar_lv_watts (would create duplicates)
    optional uint32 unknown62 = 62;          // Always 0
    optional uint32 unknown63 = 63;          // Excluded: solar_lv_cur (would create duplicates)
    optional uint32 unknown64 = 64;          // Variable ~25
    optional uint32 unknown65 = 65;          // Always 0
    optional uint32 unknown66 = 66;          // Always 0
    optional uint32 unknown67 = 67;          // Variable ~22
    optional uint32 unknown68 = 68;          // Variable ~22
    optional uint32 unknown69 = 69;          // Always 0
    optional uint32 unknown70 = 70;          // Always 0
    
    // Raw solar data fields (confirmed working mappings)
    optional uint32 unknown71 = 71;          // Variable ~3
    optional uint32 solar_hv_watts_raw = 72; // Solar HV raw power (confirmed)
    optional uint32 solar_lv_watts_raw2 = 73; // Solar LV raw power (confirmed)
    
    // Additional raw fields
    optional uint32 unknown74 = 74;          // Always 0
    optional uint32 unknown75 = 75;          // Always 0
    optional uint32 unknown76 = 76;          // Always 0
    optional uint32 unknown77 = 77;          // Always 0
    optional uint32 unknown78 = 78;          // Always 0
    optional uint32 solar_hv_vol_raw = 79;   // HV solar voltage (raw, variable ~52228)
    optional uint32 solar_hv_cur_raw = 80;   // HV solar current (raw, variable ~49244)
}

// Note: cmd_id 21 (heartbeat) appears to be encrypted/encoded data
// Analysis shows it contains periodic system health information
